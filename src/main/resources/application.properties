### jwt
smallrye.jwt.sign.key.location=privateKey.pem
mp.jwt.verify.publickey.location=publicKey.pem
# required
mp.jwt.verify.issuer=https://quarkus.io/jwt-case

### flyway
# Database config (Dev Services will start PostgreSQL for us!)
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=demo
quarkus.datasource.password=demo
# Hibernate SQL Statement logging
quarkus.hibernate-orm.log.sql=true
# Flyway settings
# Flyway runs migrations when the app boots up. No manual steps.
quarkus.flyway.migrate-at-start=true
# If the database already has tables, it marks a starting point to avoid reapplying old migrations.
quarkus.flyway.baseline-on-migrate=true

### secure authentication
#quarkus.datasource.db-kind=postgresql
# Automatically creates tables on startup (dev only).
quarkus.hibernate-orm.database.generation=drop-and-create
# Disables embedded users and enables HTTP Basic auth.
quarkus.security.users.embedded.enabled=false
quarkus.security.basic.enabled=true
# If you are using DevServices no need to specify below
#quarkus.datasource.username=quarkus
#quarkus.datasource.password=quarkus
#quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/quarkus_db#

### jacoco
#Enable Automatic Report Generation
quarkus.jacoco.report=true

### tenant
#quarkus.datasource.db-kind=postgresql
#quarkus.datasource.username=quarkus_test
#quarkus.datasource.password=quarkus_test

#quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.multitenant=DISCRIMINATOR
#quarkus.hibernate-orm.log.sql=true

quarkus.security.users.file.enabled=true
quarkus.security.users.file.users=users.properties
quarkus.security.users.file.roles=roles.properties
quarkus.security.users.file.realm-name=MyRealm
quarkus.security.users.file.plain-text=true

quarkus.smallrye-openapi.security-scheme=basic
quarkus.smallrye-openapi.security-scheme-name=user
quarkus.smallrye-openapi.auto-add-security=true



